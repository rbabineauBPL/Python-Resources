Filtering Lists:
#If you have a list and you want to filter its values based on a condition, you can use list comprehensions or
#the filter() function.Using list comprehension:


my_list = [1, 2, 3, 4, 5, 6]
filtered_list = [x for x in my_list if x > 3]  # Filter values greater than 3
print(filtered_list)  # Output: [4, 5, 6]

#Using filter() function:

my_list = [1, 2, 3, 4, 5, 6]
filtered_list = list(filter(lambda x: x > 3, my_list))  # Filter values greater than 3
print(filtered_list)  
# Output: [4, 5, 6]

Filtering Pandas DataFrame:
If you have a DataFrame and you want to filter rows based on a condition, you can use boolean indexing.
python


import pandas as pd

# Create a DataFrame
df = pd.DataFrame({'A': [1, 2, 3, 4, 5], 'B': ['a', 'b', 'c', 'd', 'e']})

# Filter rows where values in column 'A' are greater than 3
filtered_df = df[df['A'] > 3]
print(filtered_df)

#Filtering NumPy Arrays:
If you have a NumPy array and you want to filter its values based on a condition, you can use boolean indexing.

import numpy as np

# Create a NumPy array

arr = np.array([1, 2, 3, 4, 5])

# Filter values greater than 3

filtered_arr = arr[arr > 3]
print(filtered_arr)  # Output: [4, 5]
